{"version":3,"sources":["app.config.js","components/Login/index.js","apiManager.js","components/Products/index.js","App.js","index.js"],"names":["API_SERVER","URL","getAllProducts","signIn","signOut","signUp","getUrl","service","Login","props","state","error","username","password","isSignUp","onLogin","bind","handleChange","event","target","value","name","this","setState","Promise","resolve","reject","fetch","credentials","method","headers","body","JSON","stringify","then","resp","json","data","catch","console","window","location","href","res","message","className","type","placeholder","onChange","id","onClick","React","Component","Product","productList","alert","map","product","src","image","width","height","title","price","App","path","element","Products","rootElement","document","getElementById","ReactDOM","render"],"mappings":"mPAAMA,EACE,wBAGFC,EAAM,CACVC,eAAgB,sBAChBC,OAAQ,mBACRC,QAAS,oBACTC,OAAQ,oBAGJC,EAAS,SAACC,GACd,OAAOP,EAAkBC,EAAIM,I,OCmEhBC,E,kDA1Eb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,SAAU,GACVC,SAAU,GACVC,UAAU,GAEZ,EAAKC,QAAW,EAAKA,QAAQC,KAAb,gBAChB,EAAKC,aAAgB,EAAKA,aAAaD,KAAlB,gBATJ,E,gDAYnB,SAAaE,GACX,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KACpBC,KAAKC,SAAL,eACGF,EAAOD,M,qBAIZ,WAAW,IAAD,OACR,EAA+BE,KAAKZ,OCTzB,SAACE,EAAUC,GACxB,OAAO,IAAIW,SAAQ,SAACC,EAASC,GAC3BC,MAAMrB,EAAO,UAAW,CACtBsB,YAAa,UACbC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBrB,WACAC,eAEDqB,MAAK,SAACC,GACP,OAAOA,EAAKC,UACXF,MAAK,SAACG,GACP,OAAGA,EAAK1B,MACCe,EAAOW,GAETZ,EAAQY,MACdC,OAAM,SAAC3B,GAER,OADA4B,QAAQ5B,MAAM,SAAUA,GACjBe,EAAO,+BDXhBvB,CADA,EAAQS,SAAR,EAAkBC,UACSqB,MAAK,SAACC,GAE/BK,OAAOC,SAASC,KAAO,eACtB,SAACC,GACF,EAAKpB,SAAS,CACZZ,MAAOgC,EAAIC,e,oBAKjB,WACE,MAAsCtB,KAAKZ,MAAnCE,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAAUF,EAA5B,EAA4BA,MAC5B,OACE,qBAAKkC,UAAU,iBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,uBAAOA,UAAU,QAAjB,wBACA,uBACEC,KAAK,OACLzB,KAAK,WACLwB,UAAU,QACVE,YAAY,qBACZ3B,MAAOR,EACPoC,SAAU1B,KAAKL,kBAGnB,sBAAK4B,UAAU,kBAAf,UACE,uBAAOA,UAAU,QAAjB,wBACA,uBACEC,KAAK,WACLzB,KAAK,WACLwB,UAAU,QACVE,YAAY,qBACZ3B,MAAOP,EACPmC,SAAU1B,KAAKL,kBAGlBN,GACC,mBAAGkC,UAAU,aAAb,SACGlC,IAGL,wBAAQmC,KAAK,SAASG,GAAG,YAAYC,QAAS5B,KAAKP,QAAnD,4B,GAlEUoC,IAAMC,W,OEgDXC,E,kDAhDb,WAAY5C,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX4C,YAAa,IAHE,E,qDAOnB,WAAqB,IAAD,ODRb,IAAI9B,SAAQ,SAACC,EAASC,GAC3BC,MAAMrB,EAAO,kBAAmB,CAC9BsB,YAAa,YACZM,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAAQF,MAAK,SAACG,GACnC,OAAGA,EAAK1B,MACCe,EAAOW,GAETZ,EAAQY,MACdC,OAAM,SAAC3B,GAER,OADA4B,QAAQ5B,MAAM,SAAUA,GACjBe,EAAO,8BCDCQ,MAAK,SAAAC,GACpB,EAAKZ,SAAS,CACZ+B,YAAanB,OAEd,SAACA,GACFoB,MAAM,SAAWpB,EAAKS,SACtBJ,OAAOC,SAASC,KAAO,S,oBAI3B,WACE,MAEIpB,KAAKZ,MADP4C,mBADF,MACgB,GADhB,EAIA,OACE,gCACE,oBAAIT,UAAU,SAAd,0BACA,qBAAKA,UAAU,uBAAf,SAEIS,EAAYE,KAAI,SAACC,GACf,OACE,sBAAsBZ,UAAU,mBAAhC,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKa,IAAKD,EAAQE,MAAOC,MAAO,IAAKC,OAAQ,QAE/C,uBACA,sBAAKhB,UAAU,uBAAf,UACE,qBAAKA,UAAU,eAAf,SAA+BY,EAAQK,QACvC,sBAAKjB,UAAU,eAAf,oBAAiCY,EAAQM,cAPnCN,EAAQR,gB,GA/BZE,IAAMC,WCabY,EAVH,WACV,OACE,qBAAKnB,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoB,KAAK,YAAYC,QAAS,cAACC,EAAD,MACjC,cAAC,IAAD,CAAOF,KAAK,IAAIC,QAAS,cAAC,EAAD,YCL3BE,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJJ,K","file":"static/js/main.fd384ff7.chunk.js","sourcesContent":["const API_SERVER = {\n  host: \"http://localhost:8080\"\n}\n\nconst URL = {\n  getAllProducts: \"/api/getAllProducts\",\n  signIn: \"/api/auth/signin\",\n  signOut: \"/api/auth/signout\",\n  signUp: \"/api/auth/signup\"\n}\n\nconst getUrl = (service) => {\n  return API_SERVER.host + URL[service]\n}\n\nexport{\n  getUrl\n}\n","import React from \"react\";\nimport {signIn} from \"../../apiManager\";\nimport { navigate } from \"react-router-dom\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: \"\",\n      username: \"\",\n      password: \"\",\n      isSignUp: false\n    }\n    this.onLogin =  this.onLogin.bind(this);\n    this.handleChange =  this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  onLogin() {\n    const { username, password } = this.state;\n    signIn(username, password).then((resp) => {\n      // let navigate = useNavigate();\n      window.location.href = \"/products\";\n    }, (res) => {\n      this.setState({\n        error: res.message\n      })\n    });\n  }\n\n  render() {\n    const { username, password, error } = this.state;\n    return (\n      <div className=\"loginContainer\">\n        <div className=\"form\">\n          <div className=\"input-container\">\n            <label className=\"label\">Username: </label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              className=\"input\"\n              placeholder=\"Username: verifone\"\n              value={username}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-container\">\n            <label className=\"label\">Password: </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"input\"\n              placeholder=\"Password: verifone\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </div>\n          {error &&\n            <p className=\"loginError\">\n              {error}\n            </p>\n          }\n          <button type=\"submit\" id=\"login-btn\" onClick={this.onLogin}>\n            Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;","import {getUrl} from \"./app.config\";\n\nconst getAllProducts = () => {\n  return new Promise((resolve, reject) => {\n    fetch(getUrl(\"getAllProducts\"), {\n      credentials: 'include',\n    }).then((resp) => resp.json()).then((data) => {\n      if(data.error) {\n        return reject(data);\n      }\n      return resolve(data)\n    }).catch((error) => {\n      console.error('Error:', error);\n      return reject(\"Something went wrong\");\n    });\n  })\n}\n\nconst signIn = (username, password) => {\n  return new Promise((resolve, reject) => {\n    fetch(getUrl(\"signIn\"), {\n      credentials: 'include',\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then((resp) => {\n      return resp.json()\n    }).then((data) => {\n      if(data.error) {\n        return reject(data);\n      }\n      return resolve(data)\n    }).catch((error) => {\n      console.error('Error:', error);\n      return reject(\"Something went wrong\");\n    });\n  });\n}\n\nconst signUp = (username, password, email) => {\n  return new Promise((resolve, reject) => {\n    fetch(getUrl(\"signUp\"), {\n      credentials: 'include',\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        email\n      },)\n    }).then((resp) => {\n      return resp.json()\n    }).then((data) => {\n      if(data.error) {\n        return reject(data);\n      }\n      return resolve(data)\n    }).catch((error) => {\n      console.error('Error:', error);\n      return reject(\"Something went wrong\");\n    });\n  });\n}\n\nconst signOut = () => {\n  return new Promise((resolve, reject) => {\n    fetch(getUrl(\"signOut\"), {\n      credentials: 'include'\n    }).then((resp) => resp.json()).then((data) => {\n      if(data.error) {\n        return reject(data);\n      }\n      return resolve(data)\n    }).catch((error) => {\n      console.error('Error:', error);\n      return reject(\"Something went wrong\");\n    });\n  });\n}\n\nexport  {\n  signOut,\n  signUp,\n  signIn,\n  getAllProducts\n}","import React from \"react\";\nimport {getAllProducts} from \"../../apiManager\";\n\nclass Product extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      productList: []\n    }\n  }\n\n  componentDidMount() {\n    getAllProducts().then(resp => {\n      this.setState({\n        productList: resp\n      })\n    }, (resp) => {\n      alert(\"Error \" + resp.message);\n      window.location.href = \"/\";\n    })\n  }\n\n  render() {\n    const {\n      productList = []\n    } = this.state;\n\n    return (\n      <div>\n        <h2 className=\"header\">Product List</h2>\n        <div className=\"productListContainer\">\n          {\n            productList.map((product) => {\n              return (\n                <div key={product.id} className=\"productContainer\">\n                  <div className=\"productImg\">\n                    <img src={product.image} width={200} height={300}/>\n                  </div>\n                  <hr />\n                  <div className=\"productDescContainer\">\n                    <div className=\"productTitle\">{product.title}</div>\n                    <div className=\"productPrice\">â‚¬ {product.price}</div>\n                  </div>\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\nexport default Product","import React from \"react\";\nimport \"./styles.css\";\nimport Login from \"./components/Login\";\nimport {Route, Routes} from \"react-router-dom\";\nimport Products from \"./components/Products\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/products\" element={<Products />} />\n        <Route path=\"/\" element={<Login />} />\n      </Routes>\n    </div>\n  );\n};\nexport default App;","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}